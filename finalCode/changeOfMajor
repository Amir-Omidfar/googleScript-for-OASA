//Created by Amirali Omidfar 12/18/2019

var changeOfMajor= SpreadsheetApp.getActiveSpreadsheet ();
var data = changeOfMajor.getSheetByName("data");
var calculation = changeOfMajor.getSheetByName("calculation");
var results = changeOfMajor.getSheetByName("results");

//This is to move data from data sheet to the calculation sheet
function CreateCalculationSheet() {
  //clear the calculation sheet first
  calculation.clear();
  
  //Get the last row of data
  var numR=data.getLastRow();
  
  //Get the name, UID and Email address
  var personalInfo=data.getRange(1,8,numR,3)
  //Get the current and proposed majors information
  var major=data.getRange(1,15,numR,2)
  //Get the courses 
  var courses=data.getRange(1, 19, numR, 41)
 
  //define the destination range for personal info, where the data will go
  var destRange=calculation.getRange(1, 1)
  //Move the personal data
  personalInfo.copyTo(destRange);
  
  //Redefine the destination range for majors related information
  destRange=calculation.getRange(1, 4)
  //Move the major related information
  major.copyTo(destRange);
  
  //Redefine the destination Range for courses related information
  destRange=calculation.getRange(1, 6)
  //Move the courses 
  courses.copyTo(destRange);
};



//This i one use three more functions to overally calculate and import the PGPA to calculation sheet
function gpaImport(){
  //Adding four columns for gpa calculation
  calculation.insertColumnsAfter(46, 4)
  calculation.getRange(1, 47).setValue('Sum')
  calculation.getRange(1, 48).setValue('Total units')
  calculation.getRange(1, 49).setValue('PGPA')
  calculation.getRange(1, 50).setValue('CGPA')
  
  //Calculate the PGPA for each row: 
  //Get the summation of all majors prep courses
  
  var numR=calculation.getLastRow()
  for (var i=2;i<numR+1;i++)
  {
    var majorId=calculation.getRange(i,5).getValue();
    //Logger.log("majorId: "+majorId)
    calculateGPA(i,majorId);
  }
};

//Covert letter grades to numbers 
function grades(input){
  if (input == "A+" || input == "A" ) return 4.0;
  else if (input == "A-") return 3.7;
  else if (input == "B+") return 3.3;
  else if (input == "B") return 3.0;
  else if (input == "B-") return 2.7;
  else if (input == "C+") return 2.3;
  else if (input == "C") return 2.0;
  else if (input == "C-") return 1.7;
  else if (input == "D+") return 1.3;
  else if (input == "D") return 1.0;
  else if (input == "D-") return 0.7;
  else if (input == "") return 0;
};

//calculate units of each courses used for calculating the GPA
function units(input){
  if (input=="Q09_Math 31A/31AL")return 4;	
  else if (input =="Q10_Math 31B")return 4;	
  else if (input =="Q11_Math 32A")return 4; 	
  else if (input =="Q12_Math 32B") return 4;
  else if ( input =="Q13_Math 33A") return 4;	
  else if ( input =="Q14_Math 33B") return 4;	
  else if ( input =="Q15_Math 61") return 4;
  else if ( input =="Q16_Physics 1A") return 5;	
  else if ( input =="Q17_Physics 1B")return 5;	
  else if ( input =="Q18_Physics 1C")return 5;	
  else if ( input =="Q19_Physics 4AL")return 2;	
  else if ( input =="Q20_Physics 4BL")return 2;	
  else if ( input =="Q21_Chemistry 20A")return 4;	
  else if ( input =="Q22_Chemistry 20B")return 4;	
  else if ( input =="Q23_Chemistry 20L")return 3;	
  else if ( input =="Q24_Chemistry 30A")return 4;	
  else if ( input =="Q25_Chemistry 30B")return 4;	
  else if ( input =="Q26_Chemistry 30AL")return 4;	
  else if ( input =="Q27_Life Science 7A")return 5;	
  else if ( input =="Q28_Life Science 7C")return 5;
  else if ( input =="Q29_Computer Science 31")return 4;
  else if ( input =="Q30_Computer Science 32")return 4;
  else if ( input =="Q31_Computer Science 33")return 5;
  else if ( input =="Q32_Computing 10A")return 5;
  else if ( input =="Q33_Computing 10B")return 5;
  else if ( input =="Q34_Computing 10C")return 5;
  else if ( input =="Q35_ECE 3")return 4;
  else if ( input =="Q36_ECE M16/CS M51A" )return 4;	
  else if ( input =="Q37_MECH&AE/C&EE M20" )return 4;	
  else if ( input =="Q38_MECH&AE 82")return 4;
  else if ( input =="Q39_MATH 3A")return 4;
  else if ( input =="Q40_MATH 3B")return 4;
  else if ( input =="Q41_CHEM 14A")return 4;	
  else if ( input =="Q42_Chem 14B")return 4;	
  else if ( input =="Q43_Chemistry 14BL")return 4;		
  else if ( input =="Q47_Physics 6A")return 5;
  else if ( input =="Q48_C&EE 91")return 4;
  else return 0;
};


//this gives the list of required classes each proposed major needs to consider for change of major
function majorCols(pMajor)
{
  var EEcols=[6,7,8,10,13,14,15,36,37,44,26,27,33,32,16,17,18,38,11,29,30,31];//all major cols up to 44
  var AMcols=[6,7,8,10,13,14,15,36,37,44,35,18,19,20,16,17,38,39,40];
  var BEcols=[6,7,8,10,13,14,15,36,37,44,18,19,20,21,23,22,38,39,40,41,42,43,24,25,16,11]
  var Checols=[6,7,8,10,13,14,15,36,37,44,18,19,20,21,23,22,38,39,40,41,42,43,34,16,11]
  var Civcols=[6,7,8,10,13,14,15,36,37,44,35,18,19,20,38,39,40,16,34,45,26,11]
  var CScols=[6,7,8,10,13,14,15,36,37,44,12,26,27,28,33,16,17,11,29,30,31]
  var CSEcols=[6,7,8,10,13,14,15,36,37,44,12,26,27,28,33,32,16,17,11,29,30,31] 
  var EEcols=[6,7,8,10,13,14,15,36,37,44,26,27,33,32,16,17,18,38,11,29,30,31]
  var MSEcols=[6,7,8,10,13,14,15,36,37,44,18,19,20,38,39,40,11,35]
  
  if (pMajor == "Civil Engineering")return Civcols;
  else if (pMajor == "Bioengineering")return BEcols;
  else if (pMajor == "Mechanical Engineering" || pMajor == "Aerospace Engineering")return AMcols;
  else if (pMajor == "Materials Engineering")return MSEcols;
  else if (pMajor == "Computer Science")return CScols;
  else if (pMajor == "Computer Science and Engineering" || "Computer Engineering")return CSEcols;
  else if (pMajor == "Electrical Engineering")return EEcols;
  else if (pMajor == "Chemical Engineering")return Checols;
}

//calculate the gpa based on the proposed major
function calculateGPA(rowNumber,pMajor){
  var cols=majorCols(pMajor);
  var sum=0;
  var totalU=0;
  for (var i=0;i<cols.length;i++)
  {
    var letterGrade=calculation.getRange(rowNumber, cols[i]).getValue();
    Logger.log("letter Grade: "+letterGrade);
    if (letterGrade != "")
    {
      var grade=grades(letterGrade);
      Logger.log("scaled grade: " +grade);
      var credit=units(calculation.getRange(1,cols[i]).getValue());
      Logger.log("credit: " +credit);
      sum=sum+(grade*credit)
      totalU=totalU+credit;
    }
    
  }
  var PGPA=sum/totalU;
  calculation.getRange(rowNumber,47).setValue(sum);
  calculation.getRange(rowNumber,48).setValue(totalU);
  calculation.getRange(rowNumber,49).setValue(PGPA);
  
};

//for testing the 
function testMe()
{
  
  
}



function CreateResutlsSheet()
{
  results.clear();
  CreateCalculationSheet();
  gpaImport();
  var numRData=data.getLastRow();
  var numRCal=calculation.getLastRow();
  
  var personalInfo=calculation.getRange(1, 1, numRCal, 5);
  var gpaInfo = calculation.getRange(1,47,numRCal,3);
  var cgpa=data.getRange(1,17,numRData,1);
  
  var destRange=results.getRange(1, 1);
  personalInfo.copyTo(destRange);
  
  destRange=results.getRange(1, 6);
  gpaInfo.copyTo(destRange);
  
  destRange=results.getRange(1, 9);
  cgpa.copyTo(destRange);
  
  results.getRange(1, 9).setValue("CGPA")
  results.getRange(1, 10).setValue("Decision")
  
  var cohort = data.getRange(1,18,numRData,1)
  destRange=results.getRange(1, 10);
  cohort.copyTo(destRange);
  
  results.getRange(1, 10).setValue("cohort")
};








